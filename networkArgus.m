

function [layers, options] = networkArgus()
InputSize = 5;
FC1 = 30;
FC2 = 20;
FC3 = 10;
FC4 = 5;
MaxEpochs=680;
InitialLearnRate=0.026;
LearnRateDropPeriod = 80;
LearnRateDropFactor = 0.94;
L2Regularization = 0.0002;
OutputSize = 1;
layers = [ ...
    sequenceInputLayer(InputSize,'Name','input1')  %输入层
    lstmLayer(120,'Name','lstm1')  %LSTM神经网络 
    lstmLayer(60,'Name','lstm2')  %LSTM神经网络
    fullyConnectedLayer(FC1,'Name','fc1')
    fullyConnectedLayer(FC2,'Name','fc2')%全连接层
    fullyConnectedLayer(FC3,'Name','fc3')
    fullyConnectedLayer(FC4,'Name','fc4')
    fullyConnectedLayer(OutputSize,'Name','fc5')  %输出层
    regressionLayer('Name','re_1')];
options = trainingOptions('adam', ...
    'ExecutionEnvironment','cpu', ...
    'MaxEpochs',MaxEpochs, ...
    'MiniBatchSize',1,...
    'Shuffle','once',...
    'GradientThreshold',1, ...
    'InitialLearnRate',InitialLearnRate,...
    'LearnRateSchedule','piecewise',...
    'LearnRateDropPeriod',LearnRateDropPeriod,...
    'LearnRateDropFactor',LearnRateDropFactor,...
    'L2Regularization',L2Regularization,...
    'Verbose',false,...
    'Plots','training-progress');
evalin('base', 'clear InputSize FC1 FC2 numHiddenUnits MaxEpochs InitialLearnRate OutputSize');
end